name: Build and Publish Release

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-publish:
    name: Build and Publish on Windows
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install nuitka

    - name: Get current version
      id: get_version
      run: |
        $VERSION_FILE = "version.txt"
        if (-not (Test-Path $VERSION_FILE)) {
          "0.0.0" | Out-File $VERSION_FILE
        }
        $CURRENT_VERSION = Get-Content $VERSION_FILE
        Write-Host "CURRENT_VERSION=$CURRENT_VERSION" >> $env:GITHUB_ENV

    - name: Increment version
      id: increment_version
      run: |
        if ($env:CURRENT_VERSION) {
          $CURRENT_VERSION = $env:CURRENT_VERSION
        } else {
          $CURRENT_VERSION = "0.0.0"
        }
        $parts = $CURRENT_VERSION.Split('.')
        $MAJOR = $parts[0]
        $MINOR = $parts[1]
        $PATCH = [int]$parts[2] + 1
        $NEW_VERSION = "$MAJOR.$MINOR.$PATCH"
        $NEW_VERSION | Out-File "version.txt"
        Write-Host "NEW_VERSION=$NEW_VERSION" >> $env:GITHUB_ENV

    - name: Build executable with Nuitka
      run: |
        nuitka --standalone --onefile --include-package=cbmsd --enable-plugin=tk-inter main.py --windows-icon=icon.ico

    - name: Upload executable to release
      uses: svenstaro/upload-release-action@v2
      with:
        release_name: Osu!CBMSD ${{ env.NEW_VERSION }}
        body: Build release version ${{ env.NEW_VERSION }} generated with Nuitka.
        repo_token: ${{ secrets.GIT_TOKEN }}
        file: main.dist/main.exe
        asset_name: osucbmsd.exe
        overwrite: true
